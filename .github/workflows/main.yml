name: CI

on:

  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  ubuntu-build:
    name: Linux CI
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04,ubuntu-22.04,ubuntu-latest]
      
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run : |
        sudo apt-get update -qq
        sudo apt-get install -y libusb-1.0-0-dev
        sudo apt-get install -y libsoapysdr-dev
        
    - name: Clone dependency(librx888)
      run: git clone https://github.com/cozycactus/librx888.git

    - name: Create build directory for librx888
      run: |
        cd librx888
        mkdir build
        cd build

    - name: Configure and Build librx888
      run: |
        cd librx888/build
        cmake ..
        make install
        
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      

  osx-ci:
        name: OS X
        strategy:
            fail-fast: false
            matrix:
                build_type: [Release, Debug]
                config:
                    - cc: gcc-10
                      cxx: g++-10
                      test_luajit: false
                      os: macos-11
                      python2_ver: '2.7'
                      python3_ver: '3.8'

                    - cc: gcc-11
                      cxx: g++-11
                      test_luajit: false
                      os: macos-11
                      python2_ver: '2.7'
                      python3_ver: '3.8'

                    - cc: clang
                      cxx: clang++
                      test_luajit: true
                      os: macos-11
                      python2_ver: '2.7'
                      python3_ver: '3.8'

                    - cc: clang
                      cxx: clang++
                      os: macos-12
                      python2_ver: '2.7'
                      python3_ver: '3.9'
        runs-on: ${{matrix.config.os}}
        env:
            CC: ${{matrix.config.cc}}
            CXX: ${{matrix.config.cxx}}
            INSTALL_PREFIX: /usr/local
        steps:
              - uses: actions/checkout@v2
            
              - name: Install dependencies
                run: |
                  
                  brew tap cozycactus/tap
                  brew update
                  brew install --HEAD librx888
                  brew install soapysdr
                  
              - name: Build
                run: |
                  mkdir -p ${{github.workspace}}/build
                  cd ${{github.workspace}}/build
                  cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} ${{github.workspace}}
                  make
              - name: Install
                run: |
                    cd ${{github.workspace}}/build
                    sudo make install

